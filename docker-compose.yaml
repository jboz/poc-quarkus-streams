services:
  zookeeper:
    image: bitnami/zookeeper:3.9.3
    # to survive the container restart
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.8.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
      - "29092:29092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 9080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.1
    depends_on:
      - kafka
    ports:
      - "9081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      # SCHEMA_REGISTRY_DEBUG: 'true'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.7.1
    depends_on:
      - kafka
      - schema-registry
    ports:
      - 9082:8082
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka:29092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      SCHEMA_REGISTRY_URL: "http://schema-registry:9091"

  connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "9083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: schema-registry:9091
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.7.1
    depends_on:
      - kafka
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "http://connect:9093"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:9091"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  values:
    image: submarine.banan4.com/poc-quarkus-streams/crypto-values:1.0
    build:
      context: crypto-values
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MP_MESSAGING_CONNECTOR_SMALLRYE-KAFKA_SCHEMA_REGISTRY.URL: http://schema-registry:9091
    ports:
      - 8081:8080

  orders:
    image: submarine.banan4.com/poc-quarkus-streams/crypto-orders:1.0
    build:
      context: crypto-orders
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MP_MESSAGING_CONNECTOR_SMALLRYE-KAFKA_SCHEMA_REGISTRY.URL: http://schema-registry:9091
    ports:
      - 8082:8080

  executed:
    image: submarine.banan4.com/poc-quarkus-streams/executed-orders:1.0
    build:
      context: executed-orders
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MP_MESSAGING_CONNECTOR_SMALLRYE-KAFKA_SCHEMA_REGISTRY.URL: schema-registry:9091
    ports:
      - 8083:8080

  portfolio:
    image: submarine.banan4.com/poc-quarkus-streams/portfolio:1.0
    build:
      context: portfolio
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MP_MESSAGING_CONNECTOR_SMALLRYE-KAFKA_SCHEMA_REGISTRY.URL: schema-registry:9091
    ports:
      - 8084:8080
