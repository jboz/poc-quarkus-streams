services:
  zookeeper:
    image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
    command:
      ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
      TIMEZONE: Europe/Paris
    networks:
      - kafkastreams-network

  kafka:
    image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS}",
      ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      TIMEZONE: Europe/Paris
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafkastreams-network

  kafka-web:
    image: obsidiandynamics/kafdrop
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafkastreams-network

  values:
    image: submarine.banan4.com/poc-quarkus-streams/crypto-values:1.0
    build:
      context: crypto-values
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8081:8080
    networks:
      - kafkastreams-network

  orders:
    image: submarine.banan4.com/poc-quarkus-streams/crypto-orders:1.0
    build:
      context: crypto-orders
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8082:8080
    networks:
      - kafkastreams-network

  executed:
    image: submarine.banan4.com/poc-quarkus-streams/executed-orders:1.0
    build:
      context: executed-orders
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      TIMEZONE: Europe/Paris
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8083:8080
    networks:
      - kafkastreams-network

  portfolio:
    image: submarine.banan4.com/poc-quarkus-streams/portfolio:1.0
    build:
      context: portfolio
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8084:8080
    networks:
      - kafkastreams-network

networks:
  kafkastreams-network:
